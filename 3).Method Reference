Q1).Method Reference:---
import java.util.Arrays;
import java.util.List;

public class MethodReference {
    public static void print(String s){
        System.out.println(s);
    }

    public static void main(String[] args) {
        List<String> student = Arrays.asList("Alice","Bob","Charlie");
        student.forEach(MethodReference::hello);
    }
    private static void hello(String s){
        System.out.println(s);
    }
}

Q2) Constructor Reference:-----
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class MethodReference {
    public static void main(String[] args) {
        List<String> names = Arrays.asList("Alice","Bob","charlie");
        List<Student> students = names.stream().map(Student::new).collect(Collectors.toList());
        
    }
}

public class Student {
    private String name;

    public Student(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}

Q3) Java program for Converting ArrayList to HashMap using method reference in Java 8 :
public class LambdaDemo1 {
    public static void main(String[] args) {
        ArrayList<String> fruits = new ArrayList<>();
        fruits.add("Banana");
        fruits.add("Guava");
        fruits.add("Pineapple");
        fruits.add("Apple");
        System.out.println("Elements in Arraylist are:"+fruits);

        HashMap<String,Integer> res = fruits.stream().collect(Collectors.toMap(Function.identity(),String::length,(e1,e2)-> e1,HashMap::new));
        System.out.println("Elements in HashMap are:"+ res);
    }
}
